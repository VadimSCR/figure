#include "pch.h"
#include <iostream>

class Figure
{
public:
	virtual double getSquare() = 0;
	virtual double getPerimeter() = 0;
	virtual void showFigureType() = 0;
};
class Rectangle : public Figure
{
private:
	double width;
	double height;
public:
	Rectangle(double w, double h) : width(w), height(h)
	{
	}
	double getSquare() override
	{
		return width * height;
	}
	double getPerimeter() override
	{
		return width * 2 + height * 2;
	}
	void showFigureType()
	{
		std::cout << "Rectangle" << std::endl;
	}
};
class Circle : public Figure
{
private:
	double radius;
public:
	Circle(double r) : radius(r)
	{
	}
	double getSquare() override
	{
		return radius * radius* 3.14;
	}
	double getPerimeter() override
	{
		return 2 * 3.14* radius;
	}
	void showFigureType()
	{
		std::cout << "Circle" << std::endl;
	}
};

int main()
{
	Rectangle rect(50, 50); // Стороны прямоугольника
	Circle circle(50); // Радиус круга

	std::cout << "Rectangle square: " << rect.getSquare() << std::endl;
	std::cout << "Circle square: " << circle.getSquare() << std::endl;


	std::cout << "Rectangle Perimeter: " << rect.getPerimeter() << std::endl;
	std::cout << "Circle Perimeter: " << circle.getPerimeter() << std::endl;

	std::cout << "Rectangle Perimeter: " =& rect.showFigureType() << std::endl;
	std::cout << "Circle Perimeter: " =&  circle.showFigureType() << std::endl;

	return 0;
}
